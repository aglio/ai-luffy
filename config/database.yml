# SQLite. Versions 3.8.0 and up are supported.
#   gem install sqlite3
#
#   Ensure the SQLite 3 gem is defined in your Gemfile
#   gem "sqlite3"
#
default: &default
  adapter: sqlite3
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  timeout: 5000
  pragma:
    journal_mode: WAL

databases: &databases
  primary:
    <<: *default
    database: storage/<%= Rails.env %>.sqlite3
    migrations_paths: db/migrate
    url: <%= ENV["DATABASE_URL"] %>
  cache:
    <<: *default
    database: storage/<%= Rails.env %>_cache.sqlite3
    migrations_paths: db/cache_migrate
    url: <%= URI.parse(ENV["DATABASE_URL"]).tap { |url| url.path += "_cache" } if ENV["DATABASE_URL"] %>
  queue:
    <<: *default
    database: storage/<%= Rails.env %>_queue.sqlite3
    migrations_paths: db/queue_migrate
    url: <%= URI.parse(ENV["DATABASE_URL"]).tap { |url| url.path += "_queue" } if ENV["DATABASE_URL"] %>
  cable:
    <<: *default
    database: storage/<%= Rails.env %>_cable.sqlite3
    migrations_paths: db/cable_migrate
    url: <%= URI.parse(ENV["DATABASE_URL"]).tap { |url| url.path += "_cable" } if ENV["DATABASE_URL"] %>

development:
  <<: *databases

production:
  <<: *databases

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: storage/test.sqlite3
